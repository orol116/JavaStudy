package edu.kh.comm.member.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import edu.kh.comm.member.model.service.MyPageService;

@Controller
@RequestMapping("/member/myPage")
public class MyPageController {
	
	@Autowired
	private MyPageService service;
	
	// 회원 정보 조회
	@GetMapping("/info")
	public String info() {
		return "member/myPage-info";
	}
	
	// 비밀번호 변경
	@GetMapping("/changePw")
	public String changePw() {
		return "member/myPage-changePw";
	}
	
	// 회원탈퇴
	@GetMapping("/secession")
	public String secession() {
		return "member/myPage-secession";
	}
	
	// 프로필 변경
	@GetMapping("/profile")
	public String profile() {
		return "member/myPage-profile";
	}
	
	
	// 회원 정보 수정
	@PostMapping("/info")
	public String updateInfo() {
		
		// 필요한 값
		// - 닉네임
		// - 전화번호
		// - 주소 (String[]로 얻어와 String.join()을 이용해 문자열로 변경)
		// - 회원 번호 (Session -> 로그인한 회원 정보를 통해서 얻어옴)
		//   -> @SessionAttributes, @ModelAttribute 필요
		
		// @SessionAttributes
		// 1) Model에 세팅 데이터의 key와 @SessionAttributes에 작성된 key가 같으면
		//    Model에 세팅된 데이터를 request -> session scope로 이동시킨다.
		
		// 2) 기존에 session scope로 이동시킨 값을 얻어오는 역할
		//    @ModelAttribute("loginMember") Member loginMember
		//					  [session key]
		//    --> @SessionAttributes를 통해 session scope에 등록된 값을 얻어와
		//		  오른쪽에 작성된 Member loginMember 변수에 대입
		//  	  단, 클래스 위에 @SessionAttributes({"loginMember"})가 작성되어 있어야 가능하다.
		
		// 3)
	}
	
}
