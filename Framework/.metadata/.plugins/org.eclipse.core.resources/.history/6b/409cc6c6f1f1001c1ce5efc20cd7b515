<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<!-- 
		 mapper 파일 생성 시 반드시 해야되는 것!
		
		 1. cache-ref 태그 삭제
		 2. mapper 태그에 namespace 속성 추가
		    -> namespace : 해당 파일(공간)을 쉽게 부르는 이름 (DAO에서 사용)
	-->
	
	<!-- 수행하려는 SQL에 따라서 태그가 구분된다. (사용 가능한 속성도 다름)
		 <select></select>
		 <insert></insert>
		 <update></update>
		 <delete></delete>
	-->
	
	<!-- 
		 select 태그 속성
		 1) resultType : 조회 결과가 1행 1열인 경우에만 작성
	   				     조회된 데이터의 Java 자료형을 Mybatis 별칭 형태로 작성
			  
			  [Mybatis 별칭]
			  java     :     mybatis
			  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
			  int	   :     _int
			  Integer  :     int
			  String   :     string (java.lang.String)
			  
	  	  
	-->
	  
	<!-- 조회되는 행의 개수 : 1행 / 조회되는 데이터의 타입 : int형 -->
    <select id="test1" resultType="_int">
    	SELECT COUNT(*) FROM MEMBER
	</select>
	
	<!-- ** 중요 **
		 마이바티스에서 #{}, ${} 차이점
	
		 #{변수명}  : SQL에 값이 포함될 때 양쪽에 '' 추가된다. 		  (pstmt)
		 			  -> 리터럴 사용 (값 자체로 사용) (조건식 값, 출력하고자 하는 컬럼값)
		 
		 ${변수명}  : SQL에 값이 포함될 때 양쪽에 '' 추가되지 않는다. (stmt)
		 			  -> SQL 구문 조합 시 사용 (condition)
 	 -->
	
	<!-- 조회되는 행의 개수 : 1행 / 파라미터 타입 : String / 조회되는 데이터의 타입 : String -->
	<select id="test2" parameterType="string" resultType="string">
	    SELECT MEMBER_NICK FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND SECESSION_FL = 'N'
	</select>
	
	<!-- 조회되는 행의 개수 : 1행 / 파라미터 타입 : edu.kh.comm.member.model.vo.Member / 조회되는 데이터의 타입 : String -->
	<select id="test3" parameterType="edu.kh.comm.member.model.vo.Member" resultType="string">
	    SELECT * FROM MEMBER_S
		WHERE MEMBER_EMAIL = 'test01@naver.com'
		AND MEMBER_PW = 'pass01!'
		AND SECESSION_FL = 'N'
	</select>

</mapper>
