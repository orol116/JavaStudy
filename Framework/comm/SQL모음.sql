SELECT COUNT(*) FROM MEMBER
;

SELECT MEMBER_NICK FROM MEMBER
WHERE MEMBER_EMAIL = 'user01@kh.or.kr'
AND SECESSION_FL = 'N'
;

SELECT * FROM MEMBER;

-- MEMBER 테이블을 복제해서 MEMBER_S 테이블을 생성

-- 테이블 컬럼 복제(NOT NULL 제약조건만 복제된다.)
CREATE TABLE MEMBER_S
AS SELECT * FROM MEMBER
WHERE 1 = 0;

-- 컬럼 기본값 지정
ALTER TABLE MEMBER_S 
MODIFY ENROLL_DT DEFAULT SYSDATE;

ALTER TABLE MEMBER_S 
MODIFY SECESSION_FL DEFAULT 'N';

-- PK 제약조건 추가
ALTER TABLE MEMBER_S
ADD CONSTRAINT MEMBER_S_PK PRIMARY KEY(MEMBER_NO);

-- CHECK 제약조건 추가
ALTER TABLE MEMBER_S
ADD CONSTRAINT MEMBER_S_CHK CHECK(SECESSION_FL IN('Y', 'N'));

-- 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO_S NOCACHE;

-- 샘플데이터 추가
INSERT INTO MEMBER_S VALUES(
    SEQ_MEMBER_NO_S.NEXTVAL,
    'test01@naver.com',
    'pass01!',
    '테스트1',
    '01012341234',
    DEFAULT, DEFAULT, DEFAULT, DEFAULT
);

commit;

-- 아이디, 비밀번호가 일치하는 회원의 전화번호 조회
-- 단, 정상 회원만
SELECT * FROM MEMBER_S
WHERE MEMBER_EMAIL = 'test01@naver.com'
AND MEMBER_PW = 'pass01!'
AND SECESSION_FL = 'N';

-- 로그인
SELECT MEMBER_NO,MEMBER_EMAIL,MEMBER_NICK ,MEMBER_TEL,
    MEMBER_ADDR, PROFILE_IMG, 
    TO_CHAR( ENROLL_DT, 'YYYY-MM-DD HH24:MI:SS') AS ENROLL_DT
FROM MEMBER_S
WHERE MEMBER_EMAIL = 'test01@naver.com'
AND MEMBER_PW = 'pass01!'
AND SECESSION_FL = 'N';

-- 비밀번호 업데이트
UPDATE MEMBER_S SET MEMBER_PW = '$2a$10$X7bf2C5F0fGSq9XC7IwCC.Y49UEma6/50AfHs6Xw6wDSiKelQO9bi';


-- 이메일 중복 검사 (1 중복, 0 사용가능)
SELECT COUNT(*) FROM MEMBER_S
WHERE MEMBER_EMAIL = 'test01@naver.com'
AND SECESSION_FL = 'N';

-- 제약조건 조회
SELECT * FROM ALL_CONSTRAINTS
WHERE TABLE_NAME = 'BOARD';

-- 제약조건 삭제
ALTER TABLE BOARD
DROP CONSTRAINT FK_BOARD_MEMBER;

-- BOARD 테이블에서 1번 회원이 작성하지 않은 글 삭제
DELETE FROM BOARD WHERE MEMBER_NO != 1;

-- 제약조건 추가 (BOARD -> MEMBER_S)
ALTER TABLE BOARD ADD CONSTRAINT FLK_BOARD_MEMBER_S
FOREIGN KEY(MEMBER_NO)
REFERENCES MEMBER_S
ON DELETE SET NULL;

-- BOARD 테이블 샘플데이터
INSERT INTO BOARD VALUES(
    SEQ_BOARD_NO.NEXTVAL, '스프링 테스트', '테스트 내용 입니다.', 
    DEFAULT, DEFAULT, DEFAULT, DEFAULT, 1, 1
);

DELETE FROM BOARD_IMG
WHERE BOARD_NO NOT IN(
    SELECT BOARD_NO FROM BOARD
);

-- 이미지 샘플 데이터
INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample1.jpg', 'sample1.jpg', 0, SEQ_BOARD_NO.CURRVAL);
INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample2.jpg', 'sample1.jpg', 1, SEQ_BOARD_NO.CURRVAL);
INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample3.jpg', 'sample1.jpg', 2, SEQ_BOARD_NO.CURRVAL);
INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample4.jpg', 'sample1.jpg', 3, SEQ_BOARD_NO.CURRVAL);
INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL, '/resources/images/board/sample5.jpg', 'sample1.jpg', 4, SEQ_BOARD_NO.CURRVAL);

commit;

SELECT * FROM BOARD
ORDER BY 1 DESC;

-- 게시글 목록 조회
SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICK, READ_COUNT,
    CASE WHEN SYSDATE - CREATE_DT < 1
        THEN TO_CHAR(CREATE_DT, 'HH:MI')
        ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')
    END CREATE_DT, 
    
    (SELECT IMG_RENAME FROM BOARD_IMG 
    WHERE BOARD.BOARD_NO = BOARD_IMG.BOARD_NO
    AND IMG_LEVEL = 0) THUMBNAIL
    
FROM BOARD
JOIN BOARD_TYPE USING(BOARD_CD)
JOIN MEMBER_S USING(MEMBER_NO)
WHERE BOARD_ST = 'N'
AND BOARD_CD = ${boardCode}
ORDER BY BOARD_NO DESC;
