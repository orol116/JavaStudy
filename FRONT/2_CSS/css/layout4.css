div{
    border: 1px solid black;
    box-sizing: border-box;
    /* => width/height 값이
          content + padding + border 합한 값에 맞게 
          알아서 비율을 조정한다. */
}

.container-1{
    border: 2px dashed red;
    
    position: relative;
    /* 내부에 작성되는 요소에
    상대적인 위치(top/bottom/left/right)를 지정할 수 있다. */
}

.first{
    width: 300px;
    height: 300px;
    background-color: yellow;
}

.second{
    width: 200px;
    height: 200px;
    background-color: green;
    position: absolute; /* 요소 기존 배치 무시(겹치기) 가능 */
    /* + 상위 요소가 relative -> 내부에 아무 위치에 배치 가능 */

    top: 50px; /* 위에서 얼마만큼 떨어지겠다. */
    left: 50px; /* 왼쪽에서 얼마만큼 떨어지겠다. */
}

.third{
    width: 100px;
    height: 100px;
    background-color: red;

    position: absolute;

    top: 100px;
    left: 100px;
}

/* 정가운데 배치하기 */
.container-2{
    width: 300px;
    height: 300px;

    position: relative; /* 내부 요소 상대 위치 지정 */
}

#center{
    width: 50px;
    height: 50px;
    background-color: pink;

/* 
    position : 요소 배치(위치)를 지정하는 속성

    * position 속성

    1) static(기본값)
    - 배치 불가능

    2) relative
    - 현재 요소를 내부요소의 기준점으로 지정

    3) absolute
    - 상위 요소를 기준으로 위치를 지정(겹치기 가능)
    - 위치 지정 시 top,bottom,left,right 사용 

    4) fixed
    - 뷰포트(브라우저에 보이는 화면)를 기준으로 위치를 지정(고정됨)
    - 위치 지정 시 top,bottom,left,right 사용 */
    position: absolute;

    /* 사방으로 요소를 당김 */
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

/* fixed */
.fixed-area{
    width: 120px;

    /* align : 맞추다, 정렬하다 */
    text-align: center; /* 문자열 가운데 정렬 */

    position: fixed;
    /* fixed 요소는 화면(뷰포트, 브라우저) 기준으로 배치된다.
       + 다른 요소와 겹쳐질 수 있고, 
         별도로 화면을 차지하려고 하지 않는다.*/

    bottom: 50px;
    right: 50px;
}