package edu.kh.community.common.filter;

import java.io.IOException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpFilter;

/* 필터 (Filter)
 * 
 * - 클라이언트 요청 시 생성되는 HttpServletRequest, HttpServletResponse가
 *   요청을 처리하는 Servlet에 도달하기 전에 특정 코드를 수행하는 클래스
 *   
 *   [요청 흐름]
 *   클라이언트 -> 요청 -> HttpServletRequest, HttpServletResponse 생성 (객체 생성)
 *   -> 필터 -> 요청 처리 Servlet
 * 
 * - 여러 필터를 만들어 연쇄적으로 연결하여 수행할 수 있다. (FilterChain)
 */

// @WebFilter("url패턴")
// - 해당 클래스를 필터 클래스로 등록
@WebFilter("/EncodingFilter")
public class EncodingFilter extends HttpFilter implements Filter {
	
	public void init(FilterConfig fConfig) throws ServletException {
		
	}
	
	public void destroy() {	}

	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		chain.doFilter(request, response);
	}




}
